{"code":"!function(e){var t={}\nfunction __webpack_require__(r){if(t[r])return t[r].exports\nvar s=t[r]={i:r,l:!1,exports:{}},a=!0\ntry{e[r].call(s.exports,s,s.exports,__webpack_require__),a=!1}finally{a&&delete t[r]}return s.l=!0,s.exports}__webpack_require__.m=e,__webpack_require__.c=t,__webpack_require__.d=function(e,t,r){__webpack_require__.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},__webpack_require__.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},__webpack_require__.t=function(e,t){if(1&t&&(e=__webpack_require__(e)),8&t)return e\nif(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e\nvar r=Object.create(null)\nif(__webpack_require__.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var s in e)__webpack_require__.d(r,s,function(t){return e[t]}.bind(null,s))\nreturn r},__webpack_require__.n=function(e){var t=e&&e.__esModule?function getDefault(){return e.default}:function getModuleExports(){return e}\nreturn __webpack_require__.d(t,\"a\",t),t},__webpack_require__.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},__webpack_require__.p=\"/\",__webpack_require__(__webpack_require__.s=\"0Gu+\")}({\"0Gu+\":function(e,t,r){\"use strict\"\nr.r(t)\nvar s={},a=(e,t)=>{s[e]&&(s[e]=s[e].filter(e=>t!==e))}\nr(\"Bxln\")\nconst n=(e,...t)=>{let r=e\nreturn t.length>0&&(r+=` :: ${JSON.stringify(t)}`),r}\nclass WorkboxError_WorkboxError extends Error{constructor(e,t){super(n(e,t)),this.name=e,this.details=t}}const i=new Set\nconst o={googleAnalytics:\"googleAnalytics\",precache:\"precache-v2\",prefix:\"workbox\",runtime:\"runtime\",suffix:\"undefined\"!=typeof registration?registration.scope:\"\"},c=e=>[o.prefix,e,o.suffix].filter(e=>e&&e.length>0).join(\"-\"),h={updateDetails:e=>{(e=>{for(const t of Object.keys(o))e(t)})(t=>{\"string\"==typeof e[t]&&(o[t]=e[t])})},getGoogleAnalyticsName:e=>e||c(o.googleAnalytics),getPrecacheName:e=>e||c(o.precache),getPrefix:()=>o.prefix,getRuntimeName:e=>e||c(o.runtime),getSuffix:()=>o.suffix}\nfunction stripParams(e,t){const r=new URL(e)\nfor(const e of t)r.searchParams.delete(e)\nreturn r.href}let u\nfunction dontWaitFor(e){e.then(()=>{})}class Deferred{constructor(){this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}}const l=e=>{return new URL(String(e),location.href).href.replace(new RegExp(`^${location.origin}`),\"\")}\nfunction timeout(e){return new Promise(t=>setTimeout(t,e))}function waitUntil(e,t){const r=t()\nreturn e.waitUntil(r),r}async function copyResponse(e,t){let r=null\nif(e.url){r=new URL(e.url).origin}if(r!==self.location.origin)throw new WorkboxError_WorkboxError(\"cross-origin-copy-response\",{origin:r})\nconst s=e.clone(),a={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},n=t?t(a):a,i=function canConstructResponseFromBodyStream(){if(void 0===u){const e=new Response(\"\")\nif(\"body\"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?s.body:await s.blob()\nreturn new Response(i,n)}r(\"xwD5\")\nconst d=\"__WB_REVISION__\"\nfunction createCacheKey(e){if(!e)throw new WorkboxError_WorkboxError(\"add-to-cache-list-unexpected-type\",{entry:e})\nif(\"string\"==typeof e){const t=new URL(e,location.href)\nreturn{cacheKey:t.href,url:t.href}}const{revision:t,url:r}=e\nif(!r)throw new WorkboxError_WorkboxError(\"add-to-cache-list-unexpected-type\",{entry:e})\nif(!t){const e=new URL(r,location.href)\nreturn{cacheKey:e.href,url:e.href}}const s=new URL(r,location.href),a=new URL(r,location.href)\nreturn s.searchParams.set(d,t),{cacheKey:s.href,url:a.href}}class PrecacheInstallReportPlugin{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=(async({request:e,state:t})=>{t&&(t.originalRequest=e)}),this.cachedResponseWillBeUsed=(async({event:e,state:t,cachedResponse:r})=>{if(\"install\"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url\nr?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return r})}}class PrecacheCacheKeyPlugin{constructor({precacheController:e}){this.cacheKeyWillBeUsed=(async({request:e,params:t})=>{const r=t&&t.cacheKey||this._precacheController.getCacheKeyForURL(e.url)\nreturn r?new Request(r):e}),this._precacheController=e}}r(\"aqiC\")\nfunction toRequest(e){return\"string\"==typeof e?new Request(e):e}class StrategyHandler_StrategyHandler{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new Deferred,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map\nfor(const e of this._plugins)this._pluginStateMap.set(e,{})\nthis.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:t}=this\nlet r=toRequest(e)\nif(\"navigate\"===r.mode&&t instanceof FetchEvent&&t.preloadResponse){const e=await t.preloadResponse\nif(e)return e}const s=this.hasCallback(\"fetchDidFail\")?r.clone():null\ntry{for(const e of this.iterateCallbacks(\"requestWillFetch\"))r=await e({request:r.clone(),event:t})}catch(e){if(e instanceof Error)throw new WorkboxError_WorkboxError(\"plugin-error-request-will-fetch\",{thrownErrorMessage:e.message})}const a=r.clone()\ntry{let e\ne=await fetch(r,\"navigate\"===r.mode?void 0:this._strategy.fetchOptions)\nfor(const r of this.iterateCallbacks(\"fetchDidSucceed\"))e=await r({event:t,request:a,response:e})\nreturn e}catch(e){throw s&&await this.runCallbacks(\"fetchDidFail\",{error:e,event:t,originalRequest:s.clone(),request:a.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),r=t.clone()\nreturn this.waitUntil(this.cachePut(e,r)),t}async cacheMatch(e){const t=toRequest(e)\nlet r\nconst{cacheName:s,matchOptions:a}=this._strategy,n=await this.getCacheKey(t,\"read\"),i=Object.assign(Object.assign({},a),{cacheName:s})\nr=await caches.match(n,i)\nfor(const e of this.iterateCallbacks(\"cachedResponseWillBeUsed\"))r=await e({cacheName:s,matchOptions:a,cachedResponse:r,request:n,event:this.event})||void 0\nreturn r}async cachePut(e,t){const r=toRequest(e)\nawait timeout(0)\nconst s=await this.getCacheKey(r,\"write\")\nif(!t)throw new WorkboxError_WorkboxError(\"cache-put-with-no-response\",{url:l(s.url)})\nconst a=await this._ensureResponseSafeToCache(t)\nif(!a)return!1\nconst{cacheName:n,matchOptions:o}=this._strategy,c=await self.caches.open(n),h=this.hasCallback(\"cacheDidUpdate\"),u=h?await async function cacheMatchIgnoreParams(e,t,r,s){const a=stripParams(t.url,r)\nif(t.url===a)return e.match(t,s)\nconst n=Object.assign(Object.assign({},s),{ignoreSearch:!0}),i=await e.keys(t,n)\nfor(const t of i)if(a===stripParams(t.url,r))return e.match(t,s)}(c,s.clone(),[\"__WB_REVISION__\"],o):null\ntry{await c.put(s,h?a.clone():a)}catch(e){if(e instanceof Error)throw\"QuotaExceededError\"===e.name&&await async function executeQuotaErrorCallbacks(){for(const e of i)await e()}(),e}for(const e of this.iterateCallbacks(\"cacheDidUpdate\"))await e({cacheName:n,oldResponse:u,newResponse:a.clone(),request:s,event:this.event})\nreturn!0}async getCacheKey(e,t){if(!this._cacheKeys[t]){let r=e\nfor(const e of this.iterateCallbacks(\"cacheKeyWillBeUsed\"))r=toRequest(await e({mode:t,request:r,event:this.event,params:this.params}))\nthis._cacheKeys[t]=r}return this._cacheKeys[t]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0\nreturn!1}async runCallbacks(e,t){for(const r of this.iterateCallbacks(e))await r(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if(\"function\"==typeof t[e]){const r=this._pluginStateMap.get(t),s=s=>{const a=Object.assign(Object.assign({},s),{state:r})\nreturn t[e](a)}\nyield s}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e\nfor(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,r=!1\nfor(const e of this.iterateCallbacks(\"cacheWillUpdate\"))if(r=!0,!(t=await e({request:this.request,response:t,event:this.event})||void 0))break\nreturn r||t&&200!==t.status&&(t=void 0),t}}class Strategy_Strategy{constructor(e={}){this.cacheName=h.getRuntimeName(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e)\nreturn t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request})\nconst t=e.event,r=\"string\"==typeof e.request?new Request(e.request):e.request,s=\"params\"in e?e.params:void 0,a=new StrategyHandler_StrategyHandler(this,{event:t,request:r,params:s}),n=this._getResponse(a,r,t)\nreturn[n,this._awaitComplete(n,a,r,t)]}async _getResponse(e,t,r){await e.runCallbacks(\"handlerWillStart\",{event:r,request:t})\nlet s=void 0\ntry{if(!(s=await this._handle(t,e))||\"error\"===s.type)throw new WorkboxError_WorkboxError(\"no-response\",{url:t.url})}catch(a){if(a instanceof Error)for(const n of e.iterateCallbacks(\"handlerDidError\"))if(s=await n({error:a,event:r,request:t}))break\nif(!s)throw a}for(const a of e.iterateCallbacks(\"handlerWillRespond\"))s=await a({event:r,request:t,response:s})\nreturn s}async _awaitComplete(e,t,r,s){let a,n\ntry{a=await e}catch(n){}try{await t.runCallbacks(\"handlerDidRespond\",{event:s,request:r,response:a}),await t.doneWaiting()}catch(e){e instanceof Error&&(n=e)}if(await t.runCallbacks(\"handlerDidComplete\",{event:s,request:r,response:a,error:n}),t.destroy(),n)throw n}}class PrecacheStrategy_PrecacheStrategy extends Strategy_Strategy{constructor(e={}){e.cacheName=h.getPrecacheName(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(PrecacheStrategy_PrecacheStrategy.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const r=await t.cacheMatch(e)\nreturn r||(t.event&&\"install\"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let r\nif(!this._fallbackToNetwork)throw new WorkboxError_WorkboxError(\"missing-precache-entry\",{cacheName:this.cacheName,url:e.url})\nreturn r=await t.fetch(e)}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded()\nconst r=await t.fetch(e)\nif(!await t.cachePut(e,r.clone()))throw new WorkboxError_WorkboxError(\"bad-precaching-response\",{url:e.url,status:r.status})\nreturn r}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0\nfor(const[r,s]of this.plugins.entries())s!==PrecacheStrategy_PrecacheStrategy.copyRedirectedCacheableResponsesPlugin&&(s===PrecacheStrategy_PrecacheStrategy.defaultPrecacheCacheabilityPlugin&&(e=r),s.cacheWillUpdate&&t++)\n0===t?this.plugins.push(PrecacheStrategy_PrecacheStrategy.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}PrecacheStrategy_PrecacheStrategy.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},PrecacheStrategy_PrecacheStrategy.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await copyResponse(e):e}\nclass PrecacheController_PrecacheController{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:r=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new PrecacheStrategy_PrecacheStrategy({cacheName:h.getPrecacheName(e),plugins:[...t,new PrecacheCacheKeyPlugin({precacheController:this})],fallbackToNetwork:r}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener(\"install\",this.install),self.addEventListener(\"activate\",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const t=[]\nfor(const r of e){\"string\"==typeof r?t.push(r):r&&void 0===r.revision&&t.push(r.url)\nconst{cacheKey:e,url:s}=createCacheKey(r),a=\"string\"!=typeof r&&r.revision?\"reload\":\"default\"\nif(this._urlsToCacheKeys.has(s)&&this._urlsToCacheKeys.get(s)!==e)throw new WorkboxError_WorkboxError(\"add-to-cache-list-conflicting-entries\",{firstEntry:this._urlsToCacheKeys.get(s),secondEntry:e})\nif(\"string\"!=typeof r&&r.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==r.integrity)throw new WorkboxError_WorkboxError(\"add-to-cache-list-conflicting-integrities\",{url:s})\nthis._cacheKeysToIntegrities.set(e,r.integrity)}if(this._urlsToCacheKeys.set(s,e),this._urlsToCacheModes.set(s,a),t.length>0){t.join(\", \")\n1}}}install(e){return waitUntil(e,async()=>{const t=new PrecacheInstallReportPlugin\nthis.strategy.plugins.push(t)\nfor(const[t,r]of this._urlsToCacheKeys){const s=this._cacheKeysToIntegrities.get(r),a=this._urlsToCacheModes.get(t),n=new Request(t,{integrity:s,cache:a,credentials:\"same-origin\"})\nawait Promise.all(this.strategy.handleAll({params:{cacheKey:r},request:n,event:e}))}const{updatedURLs:r,notUpdatedURLs:s}=t\nreturn{updatedURLs:r,notUpdatedURLs:s}})}activate(e){return waitUntil(e,async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),r=new Set(this._urlsToCacheKeys.values()),s=[]\nfor(const a of t)r.has(a.url)||(await e.delete(a),s.push(a.url))\nreturn{deletedURLs:s}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href)\nreturn this._urlsToCacheKeys.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,r=this.getCacheKeyForURL(t)\nif(r){return(await self.caches.open(this.strategy.cacheName)).match(r)}}createHandlerBoundToURL(e){const t=this.getCacheKeyForURL(e)\nif(!t)throw new WorkboxError_WorkboxError(\"non-precached-url\",{url:e})\nreturn r=>(r.request=new Request(e),r.params=Object.assign({cacheKey:t},r.params),this.strategy.handle(r))}}let p\nconst f=()=>(p||(p=new PrecacheController_PrecacheController),p)\nr(\"5tLK\")\nconst g=\"GET\",_=e=>e&&\"object\"==typeof e?e:{handle:e}\nclass Route_Route{constructor(e,t,r=g){this.handler=_(t),this.match=e,this.method=r}setCatchHandler(e){this.catchHandler=_(e)}}class RegExpRoute_RegExpRoute extends Route_Route{constructor(e,t,r){super(({url:t})=>{const r=e.exec(t.href)\nif(r&&(t.origin===location.origin||0===r.index))return r.slice(1)},t,r)}}class Router_Router{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener(\"fetch\",e=>{const{request:t}=e,r=this.handleRequest({request:t,event:e})\nr&&e.respondWith(r)})}addCacheListener(){self.addEventListener(\"message\",e=>{if(e.data&&\"CACHE_URLS\"===e.data.type){const{payload:t}=e.data\n0\nconst r=Promise.all(t.urlsToCache.map(t=>{\"string\"==typeof t&&(t=[t])\nconst r=new Request(...t)\nreturn this.handleRequest({request:r,event:e})}))\ne.waitUntil(r),e.ports&&e.ports[0]&&r.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const r=new URL(e.url,location.href)\nif(!r.protocol.startsWith(\"http\"))return void 0\nconst s=r.origin===location.origin,{params:a,route:n}=this.findMatchingRoute({event:t,request:e,sameOrigin:s,url:r})\nlet i=n&&n.handler\nconst o=e.method\nif(!i&&this._defaultHandlerMap.has(o)&&(i=this._defaultHandlerMap.get(o)),!i)return void 0\nlet c\ntry{c=i.handle({url:r,request:e,event:t,params:a})}catch(e){c=Promise.reject(e)}const h=n&&n.catchHandler\nreturn c instanceof Promise&&(this._catchHandler||h)&&(c=c.catch(async s=>{if(h){0\ntry{return await h.handle({url:r,request:e,event:t,params:a})}catch(e){e instanceof Error&&(s=e)}}if(this._catchHandler)return this._catchHandler.handle({url:r,request:e,event:t})\nthrow s})),c}findMatchingRoute({url:e,sameOrigin:t,request:r,event:s}){const a=this._routes.get(r.method)||[]\nfor(const n of a){let a\nconst i=n.match({url:e,sameOrigin:t,request:r,event:s})\nif(i)return a=i,Array.isArray(a)&&0===a.length?a=void 0:i.constructor===Object&&0===Object.keys(i).length?a=void 0:\"boolean\"==typeof i&&(a=void 0),{route:n,params:a}}return{}}setDefaultHandler(e,t=g){this._defaultHandlerMap.set(t,_(e))}setCatchHandler(e){this._catchHandler=_(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new WorkboxError_WorkboxError(\"unregister-route-but-not-found-with-method\",{method:e.method})\nconst t=this._routes.get(e.method).indexOf(e)\nif(!(t>-1))throw new WorkboxError_WorkboxError(\"unregister-route-route-not-registered\")\nthis._routes.get(e.method).splice(t,1)}}let m\nconst w=()=>(m||((m=new Router_Router).addFetchListener(),m.addCacheListener()),m)\nfunction registerRoute(e,t,r){let s\nif(\"string\"==typeof e){const a=new URL(e,location.href)\n0,s=new Route_Route(({url:e})=>e.href===a.href,t,r)}else if(e instanceof RegExp)s=new RegExpRoute_RegExpRoute(e,t,r)\nelse if(\"function\"==typeof e)s=new Route_Route(e,t,r)\nelse{if(!(e instanceof Route_Route))throw new WorkboxError_WorkboxError(\"unsupported-route-type\",{moduleName:\"workbox-routing\",funcName:\"registerRoute\",paramName:\"capture\"})\ns=e}return w().registerRoute(s),s}class PrecacheRoute_PrecacheRoute extends Route_Route{constructor(e,t){super(({request:r})=>{const s=e.getURLsToCacheKeys()\nfor(const e of function*generateURLVariations(e,{ignoreURLParametersMatching:t=[/^utm_/,/^fbclid$/],directoryIndex:r=\"index.html\",cleanURLs:s=!0,urlManipulation:a}={}){const n=new URL(e,location.href)\nn.hash=\"\",yield n.href\nconst i=function removeIgnoredSearchParams(e,t=[]){for(const r of[...e.searchParams.keys()])t.some(e=>e.test(r))&&e.searchParams.delete(r)\nreturn e}(n,t)\nif(yield i.href,r&&i.pathname.endsWith(\"/\")){const e=new URL(i.href)\ne.pathname+=r,yield e.href}if(s){const e=new URL(i.href)\ne.pathname+=\".html\",yield e.href}if(a){const e=a({url:n})\nfor(const t of e)yield t.href}}(r.url,t)){const t=s.get(e)\nif(t)return{cacheKey:t}}},e.strategy)}}function precacheAndRoute(e,t){!function precache(e){f().precache(e)}(e),function addRoute(e){const t=f()\nregisterRoute(new PrecacheRoute_PrecacheRoute(t,e))}(t)}const y=(e,t)=>t.some(t=>e instanceof t)\nlet b,R\nconst x=new WeakMap,v=new WeakMap,E=new WeakMap,k=new WeakMap,C=new WeakMap\nlet P={get(e,t,r){if(e instanceof IDBTransaction){if(\"done\"===t)return v.get(e)\nif(\"objectStoreNames\"===t)return e.objectStoreNames||E.get(e)\nif(\"store\"===t)return r.objectStoreNames[1]?void 0:r.objectStore(r.objectStoreNames[0])}return wrap(e[t])},set:(e,t,r)=>(e[t]=r,!0),has:(e,t)=>e instanceof IDBTransaction&&(\"done\"===t||\"store\"===t)||t in e}\nfunction wrapFunction(e){return e!==IDBDatabase.prototype.transaction||\"objectStoreNames\"in IDBTransaction.prototype?function getCursorAdvanceMethods(){return R||(R=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}().includes(e)?function(...t){return e.apply(q(this),t),wrap(x.get(this))}:function(...t){return wrap(e.apply(q(this),t))}:function(t,...r){const s=e.call(q(this),t,...r)\nreturn E.set(s,t.sort?t.sort():[t]),wrap(s)}}function transformCachableValue(e){return\"function\"==typeof e?wrapFunction(e):(e instanceof IDBTransaction&&function cacheDonePromiseForTransaction(e){if(v.has(e))return\nconst t=new Promise((t,r)=>{const s=()=>{e.removeEventListener(\"complete\",a),e.removeEventListener(\"error\",n),e.removeEventListener(\"abort\",n)},a=()=>{t(),s()},n=()=>{r(e.error||new DOMException(\"AbortError\",\"AbortError\")),s()}\ne.addEventListener(\"complete\",a),e.addEventListener(\"error\",n),e.addEventListener(\"abort\",n)})\nv.set(e,t)}(e),y(e,function getIdbProxyableTypes(){return b||(b=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}())?new Proxy(e,P):e)}function wrap(e){if(e instanceof IDBRequest)return function promisifyRequest(e){const t=new Promise((t,r)=>{const s=()=>{e.removeEventListener(\"success\",a),e.removeEventListener(\"error\",n)},a=()=>{t(wrap(e.result)),s()},n=()=>{r(e.error),s()}\ne.addEventListener(\"success\",a),e.addEventListener(\"error\",n)})\nreturn t.then(t=>{t instanceof IDBCursor&&x.set(t,e)}).catch(()=>{}),C.set(t,e),t}(e)\nif(k.has(e))return k.get(e)\nconst t=transformCachableValue(e)\nreturn t!==e&&(k.set(e,t),C.set(t,e)),t}const q=e=>C.get(e)\nconst S=[\"get\",\"getKey\",\"getAll\",\"getAllKeys\",\"count\"],W=[\"put\",\"add\",\"delete\",\"clear\"],L=new Map\nfunction getMethod(e,t){if(!(e instanceof IDBDatabase)||t in e||\"string\"!=typeof t)return\nif(L.get(t))return L.get(t)\nconst r=t.replace(/FromIndex$/,\"\"),s=t!==r,a=W.includes(r)\nif(!(r in(s?IDBIndex:IDBObjectStore).prototype)||!a&&!S.includes(r))return\nconst n=async function(e,...t){const n=this.transaction(e,a?\"readwrite\":\"readonly\")\nlet i=n.store\nreturn s&&(i=i.index(t.shift())),(await Promise.all([i[r](...t),a&&n.done]))[0]}\nreturn L.set(t,n),n}!function replaceTraps(e){P=e(P)}(e=>({...e,get:(t,r,s)=>getMethod(t,r)||e.get(t,r,s),has:(t,r)=>!!getMethod(t,r)||e.has(t,r)}))\nr(\"2KUI\")\nconst U=\"workbox-expiration\",N=\"cache-entries\",T=e=>{const t=new URL(e,location.href)\nreturn t.hash=\"\",t.href}\nclass CacheTimestampsModel_CacheTimestampsModel{constructor(e){this._db=null,this._cacheName=e}_upgradeDb(e){const t=e.createObjectStore(N,{keyPath:\"id\"})\nt.createIndex(\"cacheName\",\"cacheName\",{unique:!1}),t.createIndex(\"timestamp\",\"timestamp\",{unique:!1})}_upgradeDbAndDeleteOldDbs(e){this._upgradeDb(e),this._cacheName&&function deleteDB(e,{blocked:t}={}){const r=indexedDB.deleteDatabase(e)\nreturn t&&r.addEventListener(\"blocked\",()=>t()),wrap(r).then(()=>void 0)}(this._cacheName)}async setTimestamp(e,t){const r={url:e=T(e),timestamp:t,cacheName:this._cacheName,id:this._getId(e)},s=await this.getDb()\nawait s.put(N,r)}async getTimestamp(e){const t=await this.getDb(),r=await t.get(N,this._getId(e))\nreturn null==r?void 0:r.timestamp}async expireEntries(e,t){const r=await this.getDb()\nlet s=await r.transaction(N).store.index(\"timestamp\").openCursor(null,\"prev\")\nconst a=[]\nlet n=0\nfor(;s;){const r=s.value\nr.cacheName===this._cacheName&&(e&&r.timestamp<e||t&&n>=t?a.push(s.value):n++),s=await s.continue()}const i=[]\nfor(const e of a)await r.delete(N,e.id),i.push(e.url)\nreturn i}_getId(e){return this._cacheName+\"|\"+T(e)}async getDb(){return this._db||(this._db=await function openDB(e,t,{blocked:r,upgrade:s,blocking:a,terminated:n}={}){const i=indexedDB.open(e,t),o=wrap(i)\nreturn s&&i.addEventListener(\"upgradeneeded\",e=>{s(wrap(i.result),e.oldVersion,e.newVersion,wrap(i.transaction))}),r&&i.addEventListener(\"blocked\",()=>r()),o.then(e=>{n&&e.addEventListener(\"close\",()=>n()),a&&e.addEventListener(\"versionchange\",()=>a())}).catch(()=>{}),o}(U,1,{upgrade:this._upgradeDbAndDeleteOldDbs.bind(this)})),this._db}}class CacheExpiration_CacheExpiration{constructor(e,t={}){this._isRunning=!1,this._rerunRequested=!1,this._maxEntries=t.maxEntries,this._maxAgeSeconds=t.maxAgeSeconds,this._matchOptions=t.matchOptions,this._cacheName=e,this._timestampModel=new CacheTimestampsModel_CacheTimestampsModel(e)}async expireEntries(){if(this._isRunning)return void(this._rerunRequested=!0)\nthis._isRunning=!0\nconst e=this._maxAgeSeconds?Date.now()-1e3*this._maxAgeSeconds:0,t=await this._timestampModel.expireEntries(e,this._maxEntries),r=await self.caches.open(this._cacheName)\nfor(const e of t)await r.delete(e,this._matchOptions)\nthis._isRunning=!1,this._rerunRequested&&(this._rerunRequested=!1,dontWaitFor(this.expireEntries()))}async updateTimestamp(e){await this._timestampModel.setTimestamp(e,Date.now())}async isURLExpired(e){if(this._maxAgeSeconds){const t=await this._timestampModel.getTimestamp(e),r=Date.now()-1e3*this._maxAgeSeconds\nreturn void 0===t||t<r}return!1}async delete(){this._rerunRequested=!1,await this._timestampModel.expireEntries(1/0)}}class ExpirationPlugin_ExpirationPlugin{constructor(e={}){this.cachedResponseWillBeUsed=(async({event:e,request:t,cacheName:r,cachedResponse:s})=>{if(!s)return null\nconst a=this._isResponseDateFresh(s),n=this._getCacheExpiration(r)\ndontWaitFor(n.expireEntries())\nconst i=n.updateTimestamp(t.url)\nif(e)try{e.waitUntil(i)}catch(e){0}return a?s:null}),this.cacheDidUpdate=(async({cacheName:e,request:t})=>{const r=this._getCacheExpiration(e)\nawait r.updateTimestamp(t.url),await r.expireEntries()}),this._config=e,this._maxAgeSeconds=e.maxAgeSeconds,this._cacheExpirations=new Map,e.purgeOnQuotaError&&function registerQuotaErrorCallback(e){i.add(e)}(()=>this.deleteCacheAndMetadata())}_getCacheExpiration(e){if(e===h.getRuntimeName())throw new WorkboxError_WorkboxError(\"expire-custom-caches-only\")\nlet t=this._cacheExpirations.get(e)\nreturn t||(t=new CacheExpiration_CacheExpiration(e,this._config),this._cacheExpirations.set(e,t)),t}_isResponseDateFresh(e){if(!this._maxAgeSeconds)return!0\nconst t=this._getDateHeaderTimestamp(e)\nreturn null===t||t>=Date.now()-1e3*this._maxAgeSeconds}_getDateHeaderTimestamp(e){if(!e.headers.has(\"date\"))return null\nconst t=e.headers.get(\"date\"),r=new Date(t).getTime()\nreturn isNaN(r)?null:r}async deleteCacheAndMetadata(){for(const[e,t]of this._cacheExpirations)await self.caches.delete(e),await t.delete()\nthis._cacheExpirations=new Map}}class CacheFirst_CacheFirst extends Strategy_Strategy{async _handle(e,t){let r=await t.cacheMatch(e),s=void 0\nif(r)0\nelse{0\ntry{r=await t.fetchAndCachePut(e)}catch(e){e instanceof Error&&(s=e)}0}if(!r)throw new WorkboxError_WorkboxError(\"no-response\",{url:e.url,error:s})\nreturn r}}const D={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null}\nclass NetworkFirst_NetworkFirst extends Strategy_Strategy{constructor(e={}){super(e),this.plugins.some(e=>\"cacheWillUpdate\"in e)||this.plugins.unshift(D),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0}async _handle(e,t){const r=[]\nconst s=[]\nlet a\nif(this._networkTimeoutSeconds){const{id:n,promise:i}=this._getTimeoutPromise({request:e,logs:r,handler:t})\na=n,s.push(i)}const n=this._getNetworkPromise({timeoutId:a,request:e,logs:r,handler:t})\ns.push(n)\nconst i=await t.waitUntil((async()=>await t.waitUntil(Promise.race(s))||await n)())\nif(!i)throw new WorkboxError_WorkboxError(\"no-response\",{url:e.url})\nreturn i}_getTimeoutPromise({request:e,logs:t,handler:r}){let s\nreturn{promise:new Promise(t=>{s=setTimeout(async()=>{t(await r.cacheMatch(e))},1e3*this._networkTimeoutSeconds)}),id:s}}async _getNetworkPromise({timeoutId:e,request:t,logs:r,handler:s}){let a,n\ntry{n=await s.fetchAndCachePut(t)}catch(e){e instanceof Error&&(a=e)}return e&&clearTimeout(e),!a&&n||(n=await s.cacheMatch(t)),n}}class StaleWhileRevalidate_StaleWhileRevalidate extends Strategy_Strategy{constructor(e={}){super(e),this.plugins.some(e=>\"cacheWillUpdate\"in e)||this.plugins.unshift(D)}async _handle(e,t){const r=t.fetchAndCachePut(e).catch(()=>{})\nlet s,a=await t.cacheMatch(e)\nif(a)0\nelse{0\ntry{a=await r}catch(e){e instanceof Error&&(s=e)}}if(!a)throw new WorkboxError_WorkboxError(\"no-response\",{url:e.url,error:s})\nreturn a}}var M=r(\"yXPU\"),I=r.n(M)\nr(\"jLCR\")\nclass CacheableResponse{constructor(e={}){this._statuses=e.statuses,this._headers=e.headers}isResponseCacheable(e){let t=!0\nreturn this._statuses&&(t=this._statuses.includes(e.status)),this._headers&&t&&(t=Object.keys(this._headers).some(t=>e.headers.get(t)===this._headers[t])),t}}class CacheableResponsePlugin_CacheableResponsePlugin{constructor(e){this.cacheWillUpdate=(async({response:e})=>this._cacheableResponse.isResponseCacheable(e)?e:null),this._cacheableResponse=new CacheableResponse(e)}}var K,O=\"PREFETCH_IMAGES\",A=new RegExp(/\\.(?:png|jpg|jpeg)$/),j=e=>Number(new URLSearchParams(e.search).get(\"width\")),F=e=>{var{url:t}=e\nreturn(e=>A.test(e.pathname))(t)&&!isNaN(j(t))},B=function(){var e=I()(function*(e){var t=j(e),r=e.pathname.split(\"/\").reverse()[0],s=yield caches.open(\"images\"),a=yield s.keys(),n=yield a.filter(e=>{var{url:t}=e\nreturn new URL(t).pathname.split(\"/\").reverse()[0]===r}),i={difference:1/0,candidate:null}\nfor(var o of n){var c=j(new URL(o.url))\nif(!isNaN(c)){var h=c-t\nif(!(h<0)){if(0===h)return yield s.match(o)\nh<i.difference&&(i={difference:h,candidate:o})}}}if(i.candidate)return yield s.match(i.candidate)})\nreturn function findSameOrLargerImage(t){return e.apply(this,arguments)}}(),H=e=>new Promise(t=>{caches.match(e).then(r=>{t(r||(e=>fetch(e,{mode:\"no-cors\"}).then(t=>caches.open(\"images\").then(r=>r.put(e,t.clone())).then(()=>t)))(e))})}),G=(e,t)=>(()=>!(navigator.connection&&\"effectiveType\"in navigator.connection)||\"4g\"===navigator.connection.effectiveType)()?Promise.all(e.urls.map(H)).then(e=>(t.ports[0].postMessage({status:\"done\"}),e)).catch(e=>(t.ports[0].postMessage({status:\"error\",message:JSON.stringify(e)}),null)):(t.ports[0].postMessage({status:\"error\",message:\"Slow Network detected. Not pre-fetching images. \".concat(e.urls)}),null)\nimportScripts(\"https://storage.googleapis.com/workbox-cdn/releases/6.2.4/workbox-sw.js\"),function skipWaiting(){self.skipWaiting()}(),function clientsClaim(){self.addEventListener(\"activate\",()=>self.clients.claim())}(),precacheAndRoute(self.__WB_MANIFEST||[]),K=(()=>new CacheFirst_CacheFirst({cacheName:\"images\",plugins:[new ExpirationPlugin_ExpirationPlugin({maxEntries:60,maxAgeSeconds:2592e3,matchOptions:{ignoreVary:!0}}),new CacheableResponsePlugin_CacheableResponsePlugin({statuses:[0,200]})]}))(),registerRoute(new RegExp(\"(robots.txt|favicon.ico|manifest.json)\"),new StaleWhileRevalidate_StaleWhileRevalidate),registerRoute(F,e=>{var{url:t,request:r,event:s}=e,a=B(t,r)\nreturn s.waitUntil(a),a.then(e=>e||K.handle({request:r,event:s}))}),registerRoute(/\\.(?:png|gif|jpg|jpeg|svg)$/,new CacheFirst_CacheFirst({cacheName:\"images\",plugins:[new ExpirationPlugin_ExpirationPlugin({maxEntries:60,maxAgeSeconds:2592e3,matchOptions:{ignoreVary:!0}})]})),registerRoute(new RegExp(/\\.js$/),new CacheFirst_CacheFirst),registerRoute(e=>{var{url:t,request:r}=e\nreturn t.origin===self.location.origin&&\"document\"===r.destination},new NetworkFirst_NetworkFirst),((e,t)=>(s[e]||(s[e]=[]),s[e].push(t),()=>a(e,t)))(O,G),self.addEventListener(\"message\",e=>{var{type:t,payload:r}=e.data;((e,t,r)=>{var a=s[e]\na&&a.forEach(e=>{e(t,r)})})(t,r,e)})},\"2KUI\":function(e,t,r){\"use strict\"\ntry{self[\"workbox:expiration:6.2.4\"]&&_()}catch(e){}},\"5tLK\":function(e,t,r){\"use strict\"\ntry{self[\"workbox:routing:6.2.4\"]&&_()}catch(e){}},Bxln:function(e,t,r){\"use strict\"\ntry{self[\"workbox:core:6.2.4\"]&&_()}catch(e){}},aqiC:function(e,t,r){\"use strict\"\ntry{self[\"workbox:strategies:6.2.4\"]&&_()}catch(e){}},jLCR:function(e,t,r){\"use strict\"\ntry{self[\"workbox:cacheable-response:6.2.4\"]&&_()}catch(e){}},xwD5:function(e,t,r){\"use strict\"\ntry{self[\"workbox:precaching:6.2.4\"]&&_()}catch(e){}},yXPU:function(e,t){function asyncGeneratorStep(e,t,r,s,a,n,i){try{var o=e[n](i),c=o.value}catch(e){return void r(e)}o.done?t(c):Promise.resolve(c).then(s,a)}e.exports=function _asyncToGenerator(e){return function(){var t=this,r=arguments\nreturn new Promise(function(s,a){var n=e.apply(t,r)\nfunction _next(e){asyncGeneratorStep(n,s,a,_next,_throw,\"next\",e)}function _throw(e){asyncGeneratorStep(n,s,a,_next,_throw,\"throw\",e)}_next(void 0)})}},e.exports.default=e.exports,e.exports.__esModule=!0}})\n","extractedComments":[]}